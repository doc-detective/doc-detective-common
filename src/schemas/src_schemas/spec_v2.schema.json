{
  "title": "specification",
  "type": "object",
  "properties": {
    "id": {
      "type": "string",
      "description": "Unique identifier for the test specification."
    },
    "description": {
      "type": "string",
      "description": "Description of the test specification."
    },
    "file": {
      "type": "string",
      "description": "Path to the specification file or the file that the specification is generated from.",
      "readOnly": true
    },
    "directory": {
      "type": "string",
      "description": "Directory containing the spec.",
      "readOnly": true
    },
    "contentFile": {
      "type": "string",
      "description": "Path to the file that the specification is associated with."
    },
    "contexts": {
      "type": "array",
      "description": "Application/platform sets to run tests in. Overrides `contexts` defined at the config-level.",
      "items": {
        "oneOf": [
          {
            "$ref": "context_v2.schema.json#"
          }
        ]
      }
    },
    "openApi": {
      "type": "array",
      "items": {
        "allOf": [
          {
            "$ref": "openApi_v2.schema.json#"
          },
          {
            "type": "object",
            "properties": {
              "operationId": {
                "type": "null",
                "$commment": "Only allow operationId at the step level."
              }
            },
            "required": ["name", "descriptionPath"]
          }
        ]
      }
    },
    "arazzo": {
      "type": "array",
      "items": {
        "allOf": [
          { "$ref": "arazzo_v2.schema.json#" },
          {
            "type": "object",
            "properties": {
              "workflowId": {
                "type": "null",
                "$commment": "Only allow workflowId at the test level."
              },
              "inputs": {
                "type": "null",
                "$commment": "Only allow inputs at the test level."
              }
            },
            "required": ["name", "descriptionPath"]
          }
        ]
      }
    },
    "outputs": {
      "type": "object",
      "description": "User-specified output values.",
      "readOnly": true
    },
    "errors": {
      "type": "array",
      "description": "Errors the spec ran into during the run.",
      "readOnly": true,
      "items": {
        "type": "object",
        "required": ["message", "code", "timestamp"],
        "properties": {
          "message": {
            "type": "string",
            "description": "Description of the error."
          },
          "code": {
            "type": "string",
            "description": "Unique error code, if applicable."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Time the error occurred, in ISO 8601 format."
          },
          "details": {
            "type": "object",
            "description": "Additional details about the error, such as stack traces or specific error data."
          }
        }
      }
    },
    "startTime": {
      "type": "string",
      "format": "date-time",
      "description": "Start time of the spec run.",
      "readOnly": true
    },
    "duration": {
      "type": "number",
      "description": "Duration of the spec run in milliseconds.",
      "readOnly": true
    },
    "testsTotal": {
      "type": "integer",
      "description": "Total number of tests.",
      "readOnly": true
    },
    "testsPassed": {
      "type": "integer",
      "description": "Number of tests passed.",
      "readOnly": true
    },
    "testsFailed": {
      "type": "integer",
      "description": "Number of tests failed.",
      "readOnly": true
    },
    "tests": {
      "description": "[Tests](test) to perform.",
      "type": "array",
      "minItems": 1,
      "items": {
        "anyOf": [
          { "$ref": "test_v2.schema.json#" },
          { "$ref": "arazzo_v2.schema.json#" }
        ]
      }
    }
  },
  "required": ["tests"],
  "examples": [
    {
      "tests": [
        {
          "steps": [
            {
              "action": "checkLink",
              "url": "https://www.duckduckgo.com"
            }
          ]
        }
      ]
    },
    {
      "id": "Do all the things! - Spec",
      "contexts": [
        {
          "app": {
            "name": "chrome",
            "path": "/usr/bin/firefox"
          },
          "platforms": ["windows", "mac"]
        }
      ],
      "tests": [
        {
          "id": "Do all the things! - Test",
          "description": "This test includes nearly every property across all actions.",
          "contexts": [
            {
              "app": {
                "name": "firefox",
                "path": "/usr/bin/firefox"
              },
              "platforms": ["linux"]
            }
          ],
          "steps": [
            {
              "action": "setVariables",
              "path": ".env"
            },
            {
              "action": "runShell",
              "command": "echo",
              "args": ["$USER"]
            },
            {
              "action": "checkLink",
              "url": "https://www.duckduckgo.com"
            },
            {
              "action": "httpRequest",
              "url": "https://reqres.in/api/users",
              "method": "post",
              "requestData": {
                "name": "morpheus",
                "job": "leader"
              },
              "responseData": {
                "name": "morpheus",
                "job": "leader"
              },
              "statusCodes": [200, 201]
            },
            {
              "action": "goTo",
              "url": "https://www.duckduckgo.com"
            },
            {
              "action": "find",
              "selector": "[title=Search]",
              "timeout": 10000,
              "matchText": "Search",
              "moveTo": true,
              "click": true,
              "typeKeys": {
                "keys": ["shorthair cat"]
              }
            },
            {
              "action": "typeKeys",
              "keys": ["$ENTER$"]
            },
            {
              "action": "saveScreenshot"
            }
          ]
        }
      ]
    },
    {
      "id": "Make a request from an OpenAPI definition",
      "openApi": [
        {
          "name": "Acme",
          "descriptionPath": "https://www.acme.com/openapi.json",
          "server": "https://api.acme.com"
        }
      ],
      "tests": [
        {
          "steps": [
            {
              "action": "httpRequest",
              "openApi": {
                "operationId": "getUserById"
              },
              "requestParams": {
                "id": 123
              }
            }
          ]
        }
      ]
    },
    {
      "id": "Create a user",
      "tests": [
        {
          "name": "CreateUser",
          "descriptionPath": "https://www.acme.com/create-user.arazzo.json",
          "inputs": {
            "name": "John Doe",
            "email": "johndoe@acme.com"
          }
        }
      ]
    },
    {
      "id": "Create a user",
      "tests": [
        {
          "workflowId": "createUser",
          "inputs": {
            "name": "John Doe",
            "email": "johndoe@acme.com"
          }
        }
      ]
    }
  ]
}
